Q:
Given an integer array nums, find the sum of the elements between indices i and j (i â‰¤ j), inclusive.

Example:

Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3

Note:

    You may assume that the array does not change.
    There are many calls to sumRange function.




class NumArray {
public:
    NumArray(vector<int> &nums) {
        int n = nums.size();
        nums_copy= nums;
        int sum = 0;
        for(int i = 0;i<n;i++)
        {
            sum = sum + nums[i];
            m_nums.push_back(sum);
        }
    }

    int sumRange(int i, int j) {
        return m_nums[j]-m_nums[i]+nums_copy[i];
    }
    
    vector<int> m_nums;
    vector<int> nums_copy;
};


// Your NumArray object will be instantiated and called as such:
// NumArray numArray(nums);
// numArray.sumRange(0, 1);
// numArray.sumRange(1, 2);
