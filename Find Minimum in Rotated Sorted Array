Q:
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.



Subscribe to see which companies asked this question



class Solution {
public:
    int findMin(vector<int>& nums) {
        int low = 0;
        int n = nums.size();
        int high = n-1;
      
      while(low<high && nums[low]>nums[high])
      {
          int mid = low + (high-low)/2;
          //notes the index 
          if(nums[mid]>nums[high]) low = mid+1;  //right sorted
          else if(nums[mid]<nums[high]) high = mid; //left sorted
      }
      return nums[low];
    }
};
