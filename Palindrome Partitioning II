Q:
Given a string s, partition s such that every substring of the partition is a palindrome. 
Return the minimum cuts needed for a palindrome partitioning of s. 
For example, given s = "aab",
Return 1 since the palindrome partitioning ["aa","b"] could be produced using 1 cut




class Solution {
public:
    int minCut(string s) {
        int n = s.size();
        vector<int>dp(n+1);
        for(int i = 0;i<=n;i++) dp[i] = n-i;
        vector<vector<bool>>P(n,vector<bool>(n));
        //from back to forward scan.
        for(int i = n-1;i>=0;i--)
            for(int j = i;j<n;j++)
                if(s[i]==s[j] && ((j-i)<2 || P[i+1][j-1]))
                {
                    P[i][j] = true;
                    //dp[i,j] is Palindrome, one cut.
                    dp[i] = min(dp[i],dp[j+1]+1);
                }
        return dp[0]-1;
    }
};
