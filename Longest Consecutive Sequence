Q:
Given an unsorted array of integers, find the length of the longest consecutive elements sequence. 

For example,
 Given [100, 4, 200, 1, 3, 2],
 The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4. 

Your algorithm should run in O(n) complexity. 


class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        int n = nums.size();
        if(n<=1) return n;
        unordered_map<int,int> mymap;
        for(int i = 0;i<n;i++)
            mymap[nums[i]] = 1;
            
        int max_len = INT_MIN;
        for(int i = 0;i<n;i++)
        {
            if(mymap[nums[i]]==0) continue;
            
            //notes: using the map to find the max and min for current number.
            int up   = nums[i];
            while(mymap[up]){mymap[up] = 0; up++;}
            mymap[nums[i]] = 1;
            int down = nums[i];
            while(mymap[down]){mymap[down] = 0; down--;}
            
            if(up-down>max_len) 
                max_len = up-down-1;
        }
        
        return max_len;
    }
};
