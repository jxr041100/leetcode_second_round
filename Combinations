Q:
 Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]



class Solution {
public:
    vector<vector<int>> combine(int n, int k) {
        vector<int>ans;
        vector<vector<int>> output;
        dfs(n,k,1,ans,output);
        return output;
    }
private:
    void dfs(int n,int k, int start,vector<int>&ans,vector<vector<int>>&result)
    {
        if(ans.size()>k) return;
        
        if(ans.size()==k)
        {
            result.push_back(ans);
            return;
        }
      
        for(int j = start;j<=n;j++)
        {
            ans.push_back(j);
            dfs(n,k,j+1,ans,result);
            ans.pop_back();
        }
    }
};
