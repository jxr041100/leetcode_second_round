Q:
Invert a binary tree.

     4
   /   \
  2     7
 / \   / \
1   3 6   9

to

     4
   /   \
  7     2
 / \   / \
9   6 3   1


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        ////////////////////////////////////////////
        if(root==NULL) return root;
        TreeNode*tmp = root->left;
        root->left = root->right;
        root->right = tmp;
        
        TreeNode *left = invertTree(root->left);
        TreeNode *right = invertTree(root->right);
        
        return root;
        ///////////////////////////////////////////////////
        //iterative solutions
        if(root==NULL) return NULL;
        queue<TreeNode*> myqueue;
        myqueue.push(root);
        while(!myqueue.empty())
        {
            TreeNode* front = myqueue.front();
            myqueue.pop();
            
            TreeNode *tmp = front->left;
            front->left = front->right;
            front->right = tmp;
            if(front->left) myqueue.push(front->left);
            if(front->right) myqueue.push(front->right);
        }
        return root;
    }
};
