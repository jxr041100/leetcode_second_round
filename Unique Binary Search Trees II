Q:
Given n, generate all structurally unique BST's (binary search trees) that store values 1...n.

For example,
Given n = 3, your program should return all 5 unique BST's shown below.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

confused what "{1,#,2,3}" means? > read more on how binary tree is serialized on OJ.

Subscribe to see which companies asked this question



/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> get(int a, int b) {
        vector<TreeNode*> ans;
        vector<TreeNode*> left,right;
        if (a>b) {
            ans.push_back(NULL);
        } 
        else
        {
            for (int i=a; i<=b; i++)
            {
            	left  = get(a, i-1);
            	right = get(i+1,b);
                for (int l = 0;l<left.size();l++)
                    for (int r = 0;r<right.size();r++)
                    {
                        ans.push_back(new TreeNode(i));
                        ans.back()->left=left[l];
                        ans.back()->right=right[r];                        
                    }
            }
        }
       return ans;
    }


    vector<TreeNode*> generateTrees(int n) {
        return get(1, n);
    }

};
