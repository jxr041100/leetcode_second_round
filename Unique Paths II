Q:
Follow up for "Unique Paths":
Now consider if some obstacles are added to the grids. How many unique paths would there be?
An obstacle and empty space is marked as 1 and 0 respectively in the grid.
For example,
There is one obstacle in the middle of a 3x3 grid as illustrated below.
[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
The total number of unique paths is 2.



class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m = obstacleGrid.size();
        if(m == 0) return 0;
        int n = obstacleGrid[0].size();
        vector<vector<int>> dp(m,vector<int>(n));
        
        if(obstacleGrid[0][0]==0) 
                dp[0][0] = 1;
        else
                dp[0][0] = 0;
        
        //first row.
        for (int i = 1;i<n;i++)
         if(obstacleGrid[0][i] ==1) dp[0][i] = 0;
         else dp[0][i] = dp[0][i-1];
         
         //first column.
        for (int j = 1;j<m;j++)
         if(obstacleGrid[j][0] ==1) dp[j][0] = 0;
         else dp[j][0] = dp[j-1][0];
         
         for (int j = 1;j<m;j++)
          for (int i = 1;i<n;i++)
             if(obstacleGrid[j][i] ==1) dp[j][i] = 0;
             else dp[j][i] = dp[j-1][i]+dp[j][i-1];
             
         return dp[m-1][n-1];
         
    
    }
};
