Q:
A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).
The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).
How many possible unique paths are there?

class Solution {
public:
    int uniquePaths(int m, int n) {
        if(m == 0) return 0;
        vector<vector<int>> dp(m,vector<int>(n));
        
  
        dp[0][0] = 1;
       
        
    //first row.
    for (int i = 1;i<n;i++)
        dp[0][i] = dp[0][i-1];
     
     //first column.
    for (int j = 1;j<m;j++)
        dp[j][0] = dp[j-1][0];
     
     for (int j = 1;j<m;j++)
      for (int i = 1;i<n;i++)
          dp[j][i] = dp[j-1][i]+dp[j][i-1];
         
     return dp[m-1][n-1];
    }
};
