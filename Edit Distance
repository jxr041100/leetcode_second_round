Q:
 Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.)

You have the following 3 operations permitted on a word:

a) Insert a character
b) Delete a character
c) Replace a character


class Solution {
public:
    int minDistance(string word1, string word2) {
        int m = word1.size();
        int n = word2.size();
        if(m==0) return n;
        if(n==0) return m;
        vector<vector<int>> dp(m+1,vector<int>(n+1));
        for(int j = 0;j<=m;j++) dp[j][0]=j;
        for(int i = 0;i<=n;i++) dp[0][i] = i;
        for(int j = 1;j<=m;j++)
            for(int i = 1;i<=n;i++)
                {
                    if(word1[j-1]==word2[i-1])
                        dp[j][i] = dp[j-1][i-1];
                    else
                    {
                        dp[j][i] = min(dp[j-1][i]+1,dp[j-1][i-1]+1);
                        dp[j][i] = min(dp[j][i],dp[j][i-1]+1);
                    }
                }
        return dp[m][n];
    }
};
