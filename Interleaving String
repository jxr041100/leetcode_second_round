Q:
 Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.

For example,
Given:
s1 = "aabcc",
s2 = "dbbca",

When s3 = "aadbbcbcac", return true.
When s3 = "aadbbbaccc", return false. 

class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        int m = s1.size();
        int n = s2.size();
        int k = s3.size();
        if(m+n!=k) return false;
        if(m == 0) return s2.compare(s3)==0?true:false;
        if(n == 0) return s1.compare(s3)==0?true:false;
        vector<vector<int>>dp(m+1,vector<int>(n+1));
        dp[0][0] = true; //all empty are true.
        
        for(int i = 1;i<=m;i++) //assume s2 empty
           if(s1[i-1]==s3[i-1]) dp[i][0] = dp[i-1][0];
        
        for(int j = 1;j<=n;j++) //assume s1 empty.
           if(s2[j-1]==s3[j-1]) dp[0][j] = dp[0][j-1];
        
        for(int i = 1;i<=m;i++)
            for(int j = 1;j<=n;j++)
            {
               //Note:10/26/2015.if the current value of s3 is equal to the one from s1 or s2, 
               //we check left and up value from matrix.
                dp[i][j] = (dp[i-1][j] && (s3[i+j-1]==s1[i-1])) || 
                            (dp[i][j-1] && (s3[i+j-1]==s2[j-1]));
            }
        return dp[m][n];
    }
};
